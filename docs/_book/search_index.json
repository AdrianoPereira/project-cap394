[
["index.html", "CAP-394 Introdção à Data Science Visão geral", " CAP-394 Introdção à Data Science Adriano P. Almeida Visão geral Este projeto faz parte do trabalho final da disciplina CAP-394 - Introdução à DataScience que é oferecida no programa de pós graduação em computação aplicada do Instituto Nacional de Pesquisas Espaciais (INPE) e ministradas pelos professores Dr. Rafael Santos e Dr. Gilberto Queiroz. O trabalho tem como principal objetivo analizar dados meteorológicos relacionados à descargas elétricas atmosfércas, e assim responder as tentar responder as seguintes questões: Através da análise de atributos, é possível identificar prováveis tempestades? Quais os dias que apresentaram maiores índices de severidades? É possível serem identificadas correlações entre a ocorrência de descargas elétricas e altos índices de severidade em tempestades? Quais os atributos meteorológicos que mais influênciaram na ocorrências de descargas elétricas? Quais os atributos podem ser omitidos totalmente neste trabalho? Caso existam correlações entre atributos meteorológicos e ocorrência de raios, quais os limiares aproximados que podem ser definidos? Qual a classificação de cobertura do solo da área de estudo? Qual a infuência da cobertura de solo na ocorrência de raios? Em qual tipo de solo, foram registados as maiores taxas de incidências de raios? É possível aplicar alguma abordagem computacional para separar dados que possuem detecções de descargas elétricas dos dados que não possuem? É possível aplicar alguma abordagem computacional que faça a previsão de descargas elétricas? "],
["instalacao-das-dependencias.html", "1 Instalação das dependências 1.1 Numpy 1.2 Pandas 1.3 Jupyter notebook 1.4 Matplotlib 1.5 Raster IO 1.6 Basemap 1.7 Plotly 1.8 Scikit-learn", " 1 Instalação das dependências Afim de facilitar a reprodutibilidade deste projeto, nesta seção serão apresentadas brevemente as bibliotecas utilizadas e os passos essenciais para a fazer sua instalação. 1.1 Numpy Numpy é uma biblioteca para a linguagem de programação Python utilizada principalmente no processamento de dados tabulados em estruturas de uma ou mais dimensões. Além de sua robustez na manipulação de conjunto de dados massivos, a biblioteca Numpy possui uma vasta coleção de funções matemáticas. 1.1.1 Instalação Tradicionalmente instalação da biblioeteca Numpy pode ser feita via conda ou pip. Instalação do Numpy via conda. conda install -y numpy Instalação do Numpy via pip. pip install numpy A versão do numpy utilizada neste trabalho foi 1.15. Para mais informações visite o repositório do github onde o código fonte está hoespedado, ou seu site oficial: Site oficial: https://numpy.org Repositório github: https://github.com/numpy/numpy 1.2 Pandas Pandas é uma robusta biblioteca para manipulação e análise de dados desenvolvida para a linguagem de programação Python. Escrito na linguagem C, o Pandas possui um alto desempenho no carregamento massivo de dados, e também na realização de operações complexas de forma simples e otimizada, tornando-a uma das bibliotecas mais populares bibliotecas na área de DataScience. 1.2.1 Instalação A instalação do Pandas pode ser feita de várias maneiras, dentre elas via conda ou pip. Instalação do Pandas via conda. conda install -y pandas Instalação do Pandas via pip. pip install pandas A versão do pandas utilizada neste trabalho foi 0.25.1. Para mais informações visite o repositório do github onde o código fonte está hoespedado, ou seu site oficial: Site oficial: https://pandas.pydata.org Repositório github: https://github.com/pandas-dev/pandas 1.3 Jupyter notebook O Jupyter notebook é uma ambiente computacional web que permite a criação de documentos interativos. O Jupyter notebook é amplamente utilizada na área de DataScience graças à sua facilidade em executar códigos e receber o resultado diretamente no documento de forma imediata. Os documentos podem ser exporatos para vários formatos, incluindo .tex, .html e .pdf. 1.3.1 Instalação A instalação do Jupyter notebook pode ser feita de várias maneiras, dentre elas via conda ou pip. Instalação do Jupyter notebook via conda. conda install -c conda-forge -y jupyter_conda Instalação do Jupyter notebook via pip. pip install jupyter-conda A versão do Jupyter notebook utilizada neste trabalho foi 3.1.0. Para mais informações visite o repositório do github onde o código fonte está hoespedado, ou seu site oficial: Site oficial: https://jupyter.org/ Repositório github: https://github.com/fcollonval/jupyter_conda 1.4 Matplotlib Matplotlib é uma biblioteca Python para visualização de dados por meio de gráficos estáicos 2D ou 3d. ### Instalação Algumas formas de instalalção da biblioeteca são através dos gerenciadores conda ou pip. Instalação via conda. conda install -c conda-forge -y matplotlib Instalação via pip. pip install matplotlib A versão do Matplotlib utilizada neste trabalho foi 3.11. Para mais informações visite o repositório do github onde o código fonte está hoespedado, ou seu site oficial: Site oficial: https://matplotlib.org Repositório github: https://github.com/matplotlib/matplotlib 1.5 Raster IO Raster IO é uma biblioteca que permite trabalhar com dados geográficos matriciais no Python. 1.5.1 Instalação O pacote Raser IO pode ser instalado via conda: conda install -c conda-forge rasterio Ou via pip pip install rasterio A versão do Raster IO utilizada neste trabalho foi 1.0.26. Para mais informações visite o repositório do github onde o código fonte está hoespedado, ou seu site oficial: Site oficial: https://rasterio.readthedocs.io/en/stable/index.html Repositório github: https://github.com/mapbox/rasterio 1.6 Basemap O Basemap é uma extensão do Matplotlib, que tem como principal funcionalidade a plotagem de mapas estáticos no Python. 1.6.1 Instalação O Matplotlib é uma dependência obrigatória para o pleno funcionamento do Basemap. Após certificar-se de que o Matplotlib está instalado, é necessário baixar o pacote do Basemap no seguinte link: https://sourceforge.net/projects/matplotlib/files/matplotlib-toolkits/basemap-1.0.7. O Basemap funciona com o auxílio da biblioteca GEOS, sendo assim, após baixar e descompactar o pacote, deverá ser definiada a variável de ambiente para os binários do GEOS que se encontra dentro da pasta do Basemap, usando os seguintes comandos: cd geos-3.3.3 export GEOS_DIR = ~ / ./configure --prefix = $ GEOS_DIR make make install E então, após a instalação e configuração do GEOS, finalmente a instalação do Basemap com o seguinte comando na diretório raiz do pacote: python setup.py install A versão do Basemap utilizada neste trabalho foi 1.0.7. Para mais informações visite o repositório do github onde o código fonte está hoespedado, ou seu site oficial: Site oficial: https://basemaptutorial.readthedocs.io/en/latest Repositório github: https://github.com/rveciana/BasemapTutorial 1.7 Plotly Plotly é uma biblioeteca para visualização e integração de gráficos, possuindo uma vasta e agradável gama de layouts. 1.7.1 Instalação A instalação do Plotly pode ser feita via conda: conda install -c plotly plotly Ou via pip: pip install plotly A versão do Plotly utilizada neste trabalho foi 4.1.0. Para mais informações visite o repositório do github onde o código fonte está hoespedado, ou seu site oficial: Site oficial: https://plot.ly/python/getting-started Repositório github: https://github.com/plotly/plotly.py 1.8 Scikit-learn A Scikit-learn é uma biblioteca com uma vasta gama de ferramentas para análise de dados. Diversos algoritmos de aprendizado de máquina estão inclusos no Scikit-learn. 1.8.1 Instalação A instalação do Scikit-learn pode ser feita via conda: conda install -c anaconda scikit-learn Ou via pip: pip install scikit-learn A versão do Scikit-learn utilizada neste trabalho foi 0.19.1. Para mais informações visite o repositório do github onde o código fonte está hoespedado, ou seu site oficial: Site oficial: https://scikit-learn.org/stable Repositório github: https://github.com/scikit-learn/scikit-learn "],
["introducao.html", "2 Introdução 2.1 Características das descargas atmosféricas 2.2 Consequências provocadas pelos raios 2.3 Pesquisas relacionadas à previsão raios", " 2 Introdução As descargas elétricas atmosféricas têm sido estudadas desde os tempos de Benjamin Franklin (1706-1790), quando o próprio cientista, em 1752, realizou um dos primeiros experimentos com este fenômeno da natureza. O experimento consistiu em soltar, durante uma tempestade, uma pipa manipulada por um fio de seda, o instrumento recebia cargas elétricas advindas de raios e descia até uma chave de metal onde o fio estava preso. Com isso, Franklin acabará de descobrir de forma concisa a natureza elétrica das descargas elétricas, dando origem ao primeiro para-raios [Krider 2006]. 2.1 Características das descargas atmosféricas As descargas atmosféricas são eventos de natureza aleatória que advém de fortes interações entre os centros de cargas em sistemas convectivos. Essas interações acabam desenvolvendo forte atividade elétrica, que podendo chegar na ordem de milhares de ampères, e que normalmente são acompanhados por intensos efeitos sonoros e luminosos [Souza 2017]. Os raios podem ser dos seguintes tipos: intranuvem, quando as descargas acontecem dentro de uma única nuvem, nuvem-para-nuvem, quando cargas com polaridades opostas são conectadas de um raio em nuvens separadas, nuvens-para-ar, quando as descargas intra-nuvem extapolam os limites de uma nuvem, e por fim, as descargas nuvem-solo, que são quando os raios que atingem o solo [Rakov 2007]. A Figura 2.1 mostra alguns exemplos dos tipos de descargas elétricas mencionados. Figure 2.1: Principais tipos de descargas atmosféricas. Adptado de NOAA. 2.2 Consequências provocadas pelos raios Além de afetarem diretamente na composição química da atmosfera e a qualidade do ar na alta troposfera [Weber et al. 2005], as descargas atmosféricas são responsáveis por uma série de impactos socieconômicos. Os raios são os principais responsáveis por iniciarem incêndios florestais, causar interrupções de serviços de transmissão de energia e comunicação, e também por baixas em rebanhos de gado na zona em zona rural [Cardoso 2017]. As descargas atmosféricas estão relacionadas ao alto índice de fatalidades contra seres humanos, conforme mostrado no trabalho de [Cardoso et al. 2014]. Por ser um país de grande extensão territorial, e está predominantemente localizado em zona tropical, o Brasil ocupa uma posição de destaque mundial no que diz respeito a grande incidência de raios, chegando a serem registrados aproximadamente 77.8 milhões por ano, de acordo com estimativa feita pelo Grupo de Eletricidade Atmosférica (ELAT) do Instituto Nacional de Pesquisas Espaciais (INPE). Sendo assim, as redes de detecção desempenham um papel fundamental no monitoramento de descargas elétricas no Brasil, representando grande avanço nas pesquisas correlatas, principalmente na prevenção de fatalidades e auxílios em tomadas de decisões [Chinchay 2018]. Além disso, dados de outras fontes também são muito utilizados em pesquisas relacionadas às descargas atmosféricas, como dados de radares meteorológicos e de satélites [Chinchay 2018]. 2.3 Pesquisas relacionadas à previsão raios Dentre as pesquisas a respeito das descargas atmosféricas, talvez as que possuam maior valor agregado, sejam as pesquisas relacionadas ao desenvolvimento de mecanismos de previsão. No trabalho de [Zepka 2005], é feito um estudo aprofundado com a finalidade de avaliar a viabilidade do desenvolvimento de sistemas previsores de descargas elétricas atmosféricas, o autor também ressalta também a importância desse tipo de mecanismo para o acompanhamento e evolução de tempestades. Embora tenha sido constatada a real necessidade mecanismos de previsão de descargas elétricas, as soluções propostas ainda estão muito escassas [Zepka 2005]. Sendo assim, este trabalho tem como objetivo realizar a análise de atributos de dados meteorológicos, e então propor um sistema de previsão de descargas elétricas atmosféricas baseado em abordagens de aprendizado de máquina supervisionado. Os dados são referentes aos experimentos do CHUVA-Manaus [Machado et al. 2014] e GoAmazon [Martin et al. 2016], realizados na região central da Bacia Amazônica. Além disso, os dados foram processados em uma adaptação do algoritmo ForTraCC (Forecast and Tracking of Active Convective Cells) por Pereira [Pereira 2019]. References "],
["metodologia.html", "3 Metodologia 3.1 Contextualização da área de estudo 3.2 Análise exploratória dos dados", " 3 Metodologia Neste seção, serão descritas as etapas metodológicas utilizadas no desenvolvimento deste trabalho. 3.1 Contextualização da área de estudo Para este trabalho foram utilizados os dados do radar meteorológico SIPAM (Sistema de Proteção da Amazônia) [Saraiva et al. 2016] e da rede de detecção de raios LINET (sigla do inglês, Lightning NETwork) [Betz et al. 2009]. Os dados são oriundos dos experimentos CHUVA-Manaus [Machado et al. 2014] e GoAmazon [Martin et al. 2016] que aconteceu no ano de 2014 na região central da Bacia Amazônica. O conjunto de dados, também é resultado do processamento feito no trabalho de [Pereira 2019], afim de se calcular alguns outros índices, para isso, foi utilizada a ferramenta proposta por [Queiroz 2009], que ser trata adaptação do algoritmo de rastreio de nuvens ForTraCC (Forecast and Tracking of Active Convective Cells) [Vila et al. 2008]. Os dados possuem resolução temporal de 12 minutos, e foram obtidos durante o período de 27 de agosto a 7 de outubro em uma área de 500 km\\(^{2}\\), cobrindo ao todo 20 municípios do estado do Amazonas. A floresta é o tipo de cobertura do solo predominante nessa região, e na área de estudo representa mais de 85%, como pode ser observado na Figura 3.1. Com isso, aumenta-se os riscos serem iniciados incêndios florestais em decorrência de raios nuvem-solo, principalmente no segundo Período de Operação Intensiva (IOP - sigla do inglês, Intensive Operation Period) [Marengo et al. 1994], que corresponde a transição entre as estações seca e chuvosa, que acontece a partir do mês de agosto. É nesse perı́odo que acontecem tempestades mais severas, e consequentemente maiores incidências de descargas elétricas [Pereira 2019]. Figure 3.1: Área de estudo e sua cobertura do solo. 3.2 Análise exploratória dos dados Nesta seção serão feitas as devidas importações e também a análise exploratíoria dos dados. 3.2.1 Carregando base de dados A célula abaixo faz a importação das bibliotecas que serão utilizadas na análise dos dados. #importação das bibliotecas que serão utilizadas import os import numpy as np import pandas as pd from plotly.subplots import make_subplots import plotly.graph_objects as go import plotly Como o foco deste trabalho é trabalhar com os dados da rede de detecção LINET, os dados carregados deverão ser filtrados, já que a rede esteve em funcionamento somente durante um certo período do experimento. Sendo assim, a célula abaixo faz a importação e filtragem dos dados . #definindo arquivos para serem carregados files = [&#39;august.csv&#39;, &#39;september.csv&#39;, &#39;october.csv&#39;] PATH =&#39;../data/private/csv/fam/&#39; #Carregando e concatenando base de dados df = [pd.read_csv(os.path.join(PATH, file)) for file in files] df = pd.concat(df, sort=False) print(&#39;Total de registros carregados: %s&#39;%df[&#39;month&#39;].count()) #Filtrando base de dados ## Total de registros carregados: 53160 query = &#39;(month == 8 and day &gt;= 27) or (month == 9) or (month == 10 and day &lt;= 7)&#39; df = df.query(query) print(&#39;Total de registros após a filtragem: %s&#39;%df[&#39;month&#39;].count()) #Exibindo primeiras linhas da base de dados ## Total de registros após a filtragem: 26218 df.head() ## time sysclass lat lon dir vel size ... meanprec maxprec year month day hour minute ## 12871 0.0 0.0 -2.75 -58.57 -999.0 0.0 13.0 ... 0.97 1.18 2014 8 27 2 24 ## 12872 0.2 1.0 -2.73 -58.57 0.0 11.1 30.0 ... 1.80 4.16 2014 8 27 2 24 ## 12873 0.0 0.0 -2.73 -58.57 -999.0 0.0 21.0 ... 1.02 1.32 2014 8 27 3 0 ## 12874 0.2 1.0 -2.75 -58.57 180.0 11.1 13.0 ... 0.97 1.09 2014 8 27 3 0 ## 12875 0.0 0.0 -1.71 -59.63 -999.0 0.0 12.0 ... 0.92 0.97 2014 8 27 3 48 ## ## [5 rows x 26 columns] O código da célula abaixo mostra uma descrição básica de alguns índices do conjunto de dados. indexes = [&#39;ttyyyxx3&#39;, &#39;riverfrac&#39;, &#39;convfrac&#39;, &#39;strafrac&#39;, &#39;meanz&#39;, &#39;maxz&#39;, &#39;meanvil&#39;, &#39;ttvil&#39;, &#39;meanprec&#39;, &#39;maxprec&#39;] df[indexes].describe() ## ttyyyxx3 riverfrac convfrac strafrac ... meanvil ttvil meanprec maxprec ## count 26218.000000 26218.00000 26218.000000 26218.000000 ... 26218.000000 26218.000000 26218.000000 26218.000000 ## mean 3.293691 10.87239 45.135574 54.864425 ... 1.022231 140.454784 6.696094 43.228542 ## std 31.210997 19.20553 27.621304 27.621304 ... 0.926023 462.869909 7.353271 63.641824 ## min 0.000000 0.00000 0.000000 0.000000 ... 0.160000 1.770000 0.820000 0.880000 ## 25% 0.000000 0.00000 25.000000 37.930000 ... 0.370000 10.350000 1.940000 5.340000 ## 50% 0.000000 0.00000 36.360000 63.640000 ... 0.690000 27.160000 4.020000 17.490000 ## 75% 0.000000 13.64750 62.070000 75.000000 ... 1.350000 86.845000 8.940000 56.480000 ## max 1493.000000 100.00000 100.000000 100.000000 ... 14.980000 13637.050000 168.770000 996.970000 ## ## [8 rows x 10 columns] Nota: O atributo ttyyyxx3 é referente a quantidade de raios detectados pela rede LINET a cada 12 minutos. O código da célula abaixo tem como objetivo gerar um gráfico com a quantidade de registro em que foram detectados raios e quantidade de registros em que não foram detectados raios. #Separando registros com e sem detecções de raios no = df[df[&#39;ttyyyxx3&#39;] &lt; 1] yes = df[df[&#39;ttyyyxx3&#39;] &gt;= 1] #Contando quantidade de registros em cada subconjunto de dados tn = no[&#39;month&#39;].count() ty = yes[&#39;month&#39;].count() #Organizando dados de entrada para o gráfico labels = [&#39;Sem raios detectados (%d)&#39;%tn, &#39;Com raios detectados (%d)&#39;%ty] values= [tn, ty] #Criando gráfico fig = go.Figure() fig.add_trace( go.Pie(labels=labels, values=values, hole=.5, marker=dict(colors=[&#39;#000000&#39;, &#39;#D82D3B&#39;], line=dict(color=&#39;#A0A0A0&#39;, width=1))) ) #Alterando layout do gráfico _ = fig.update_layout( title=&#39;&lt;b&gt;Gráfico 1&lt;/b&gt;: Quantidade de registros com e sem detecção de \\ &lt;br&gt;descargas atmosféricas&#39;, template=&#39;plotly_dark&#39;, legend_orientation=&quot;v&quot; ) fig.show() Como mostrado no Gráfico 1, a quantidade de registros em que foram detectados raios é muito menor do que a quantidade de registros em que não foi detectado nenhum raio. Nesse comjunto de dados, a quantidade de registros tende a diminuir conforme aumenta a quantidade de detecções, ou seja, registros com muitos raios detectados a cada 12 minutos, é muito menor que a quantidade de registros com poucos raios detectados. Essa relação pode ser observado no Gráfico 2. #Contando a quantidade de registros em cada número de detecções group = df.groupby([&#39;ttyyyxx3&#39;]).agg({&#39;ttyyyxx3&#39;: &#39;count&#39;}) #Organizando dados de entrada para o gráfico labels = [int(x) for x in group.index][:100] values = group[&#39;ttyyyxx3&#39;].values[:100] ranges = [ (1, 5), (5, 10), (10, 20), (20, 30), (30, 40), (40, 50) ] #Criando estrutura do gráfico fig = go.Figure() for r in ranges: labels = [int(x) for x in group.index][r[0]:r[1]] values = group[&#39;ttyyyxx3&#39;].values[r[0]:r[1]] _ = fig.add_trace( go.Bar(x=labels, y=values, name=&#39;%d a %d detecções de raios&#39;%(r[0], r[1])) ) #Alterando layout do gráfico fig.update_yaxes(title_text=&#39;Quantidade de registros&#39;) fig.update_xaxes(title_text=&#39;Raios detectados a cada 12 minutos&#39;) fig.update_layout(template=&#39;plotly_dark&#39;, title=&#39;Frequência do \\ número de raios detectados a cada 12 minutos&#39;) # fig.show() Do ponto de vista físico, os sistemas precipitantes são classificados em estratiformes ou convectivos . Essa classificação é baseada no trabalho de [Steiner et al. 1995], que faz uso principalmente dos índices de refletividade obtidos por meio de radar. Enquanto nos sistemas estratiformes as chuvas acontecem de forma moderada e com distribuição uniforme, nos sistemas convectivos, elas acontecem de forma mais intensa e concentrada, caracterizando o tempo severo. As descargas atmosféricas são fenômenos que acontecem principalmente nos sistemas convectivos. Os dados utilizados neste trabalho são referentes ao segundo Período de Operação Intensiva, que como supracitado, corresponde ainda ao período de seca na região. Sendo assim, as chuvas acontecem com pouca frequência e são oriundas principalmente de sistemas convectivos. Esse comportamento pode ser observado no gráfico da Figura , onde durante todo o período de observação, somente em alguns dias houveram ocorrência de raios, e na maioria dos dias em que aconteceram, a atividade elétrica se manifestou de forma intensa . References "],
["references.html", "References", " References "]
]
